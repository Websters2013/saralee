!function(){$(function(){$.each($(".site__header"),function(){new e($(this))}),$.each($(".mobile-menu"),function(){new n($(this))}),$.each($(".preloader"),function(){new i($(this))}),$.each($(".products"),function(){new t($(this))}),$.each($(".history"),function(){new o($(this))})});var e=function(e){var n,i=this,t=e,o=!0,s=$(".hero"),a=$(window),c=function(){a.on({DOMMouseScroll:function(e){var n=e.originalEvent.detail;if(n){var i=n>0?1:-1;r(i)}},mousewheel:function(e){var n=e.originalEvent.wheelDelta;if(n){var i=n>0?-1:1;r(i)}},touchmove:function(e){var i=e.originalEvent.touches[0].clientY;i>n?r(-1):i<n&&r(1),n=i},keydown:function(e){switch(e.which){case 32:r(1);break;case 33:r(-1);break;case 34:r(1);break;case 35:r(1);break;case 36:r(-1);break;case 38:r(-1);break;case 40:r(1);break;default:return}},scroll:function(){var e=340;s.length>0&&(e=s.outerHeight()),a.scrollTop()>e?t.addClass("fixed"):t.removeClass("fixed")}})},r=function(e){e>0&&!t.hasClass("hidden")&&a.scrollTop()>t.outerHeight()&&o?f():e<0&&t.hasClass("hidden")&&o&&l()},l=function(){t.removeClass("hidden")},f=function(){t.addClass("hidden")},d=function(){t[0].obj=i,c()};i.setCanUseScroll=function(e){o=e},d()},n=function(e){var n=e,i=$(".mobile-menu-btn"),t=$("html"),o=function(){s()},s=function(){i.on("click",function(){$(this).hasClass("close")?c():a()})},a=function(){i.addClass("close"),n.addClass("visible"),t.css("overflow-y","hidden"),$(".site__header")[0].obj.setCanUseScroll(!0)},c=function(){i.removeClass("close"),n.removeClass("visible"),t.removeAttr("style"),$(".site__header")[0].obj.setCanUseScroll(!1)};o()},i=function(e){var n=e,i=n.find(".preloader__bar"),t=!1,o=!1,s=(n.data("delay"),$(window)),a=function(){s.on({load:function(){o=!0}})},c=function(){a(),r()},r=function(){var e=Math.floor(10*Math.random())+1,s=e;i.animate({width:""+e+"%"},200),setTimeout(function(){setInterval(function(){var e=Math.floor(90*Math.random())+1;e<90&&e>s&&(s=e,i.animate({width:""+e+"%"},200))},500)},1e3),setInterval(function(){o&&(i.animate({width:"100%"},200),n.css({opacity:0,visibility:"hidden"}),setTimeout(function(){n.remove()},650),t=!0)},500)};c()},t=function(e){var n,i=e,t=i.find(".products__swiper"),o=i.find(".products__prev"),s=i.find(".products__next"),a=($(window),function(){n=new Swiper(t,{autoplay:!1,speed:500,effect:"slide",slidesPerView:4,loop:!0,nextButton:s,prevButton:o,breakpoints:{767:{slidesPerView:1},1199:{slidesPerView:2}}})}),c=function(){},r=function(){c(),a()};r()},o=function(e){var n=e,i=n.find(".history__years"),t=i.find(".history__years-line"),o=t.offset().left,s=t.find(".history__years-point"),a=i.find(".history__years-list"),c=n.find(".history__content"),r=c.find(".swiper-slide"),l=null,f=($(window),function(){l=new Swiper(c,{spaceBetween:10,centeredSlides:!0,slidesPerView:"auto",touchRatio:.2,slideToClickedSlide:!0,pagination:a,paginationClickable:!0,paginationBulletRender:function(e,n){return console.log(e),'<span class="history__years-item '+n+'">'+r.eq(e).data("year")+"</span>"}})}),d=function(){n.on("click",".history__years-item",function(){var e=$(this);u(e)})},u=function(e){s.css({left:e.offset().left-o+"px"})},h=function(){d(),f()};h()}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
