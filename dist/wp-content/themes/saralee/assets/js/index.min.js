!function(){$(function(){$.each($(".site__header"),function(){new n($(this))}),$.each($(".mobile-menu"),function(){new e($(this))}),$.each($(".preloader"),function(){new i($(this))}),$.each($(".products"),function(){new t($(this))}),$.each($(".history"),function(){new o($(this))})});var n=function(n){var e,i=this,t=n,o=!0,a=$(".hero"),s=$(window),r=function(){s.on({DOMMouseScroll:function(n){var e=n.originalEvent.detail;if(e){var i=e>0?1:-1;c(i)}},mousewheel:function(n){var e=n.originalEvent.wheelDelta;if(e){var i=e>0?-1:1;c(i)}},touchmove:function(n){var i=n.originalEvent.touches[0].clientY;i>e?c(-1):i<e&&c(1),e=i},keydown:function(n){switch(n.which){case 32:c(1);break;case 33:c(-1);break;case 34:c(1);break;case 35:c(1);break;case 36:c(-1);break;case 38:c(-1);break;case 40:c(1);break;default:return}},scroll:function(){var n=340;a.length>0&&(n=a.outerHeight()),s.scrollTop()>n?t.addClass("fixed"):t.removeClass("fixed")}})},c=function(n){n>0&&!t.hasClass("hidden")&&s.scrollTop()>t.outerHeight()&&o?f():n<0&&t.hasClass("hidden")&&o&&l()},l=function(){t.removeClass("hidden")},f=function(){t.addClass("hidden")},u=function(){t[0].obj=i,r()};i.setCanUseScroll=function(n){o=n},u()},e=function(n){var e=n,i=$(".mobile-menu-btn"),t=$("html"),o=function(){a()},a=function(){i.on("click",function(){$(this).hasClass("close")?r():s()})},s=function(){i.addClass("close"),e.addClass("visible"),t.css("overflow-y","hidden"),$(".site__header")[0].obj.setCanUseScroll(!0)},r=function(){i.removeClass("close"),e.removeClass("visible"),t.removeAttr("style"),$(".site__header")[0].obj.setCanUseScroll(!1)};o()},i=function(n){var e=n,i=e.find(".preloader__bar"),t=!1,o=!1,a=(e.data("delay"),$(window)),s=function(){a.on({load:function(){o=!0}})},r=function(){s(),c()},c=function(){var n=Math.floor(10*Math.random())+1,a=n;i.animate({width:""+n+"%"},200),setTimeout(function(){setInterval(function(){var n=Math.floor(90*Math.random())+1;n<90&&n>a&&(a=n,i.animate({width:""+n+"%"},200))},500)},1e3),setInterval(function(){o&&(i.animate({width:"100%"},200),e.css({opacity:0,visibility:"hidden"}),setTimeout(function(){e.remove()},650),t=!0)},500)};r()},t=function(n){var e,i=n,t=i.find(".products__swiper"),o=i.find(".products__prev"),a=i.find(".products__next"),s=($(window),function(){e=new Swiper(t,{autoplay:!1,speed:500,effect:"slide",slidesPerView:4,loop:!0,nextButton:a,prevButton:o,breakpoints:{767:{slidesPerView:1},1199:{slidesPerView:2}}})}),r=function(){},c=function(){r(),s()};c()},o=function(n){var e=n,i=e.find(".history__years"),t=i.find(".history__years-line"),o=t.find(".history__years-point"),a=i.find(".history__years-list"),s=e.find(".history__content"),r=s.find(".swiper-slide"),c=null,l=($(window),function(){c=new Swiper(s,{pagination:a,paginationClickable:!0,paginationBulletRender:function(n,e){return'<span class="history__years-item '+e+'">'+r.eq(n).data("year")+"</span>"},onSlideChangeStart:function(n){u($(n.bullets[n.activeIndex]))}})}),f=function(){e.on("click",".history__years-item",function(){var n=$(this);u(n)}),$(window).on({resize:function(){u(e.find(".swiper-pagination-bullet-active"))}})},u=function(n){o.css({left:n.offset().left-t.offset().left+"px"})},d=function(){f(),l()};d()}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
